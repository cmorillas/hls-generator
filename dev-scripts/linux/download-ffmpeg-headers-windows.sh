#!/bin/bash
#
# Download FFmpeg Headers for Windows
# Execute on: Linux
# Target: Windows cross-compilation
#
# This script downloads and extracts ONLY header files (.h) from FFmpeg source
# for cross-compiling to Windows from Linux.
#

set -e  # Exit on error

FFMPEG_VERSION="7.0.2"
FFMPEG_URL="https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.xz"
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$(dirname "$SCRIPT_DIR")")"
OUTPUT_DIR="$PROJECT_ROOT/external/ffmpeg/windows"
TEMP_DIR="/tmp/ffmpeg-headers-download-$$"

echo "=================================================="
echo "FFmpeg Headers Downloader"
echo "=================================================="
echo "Version:     FFmpeg $FFMPEG_VERSION"
echo "Platform:    Linux (running on Linux)"
echo "Target:      Windows cross-compilation"
echo "Output:      $OUTPUT_DIR"
echo "=================================================="
echo

# Create temp directory
mkdir -p "$TEMP_DIR"
cd "$TEMP_DIR"

# Download FFmpeg source
echo "[1/4] Downloading FFmpeg source tarball..."
if command -v wget &> /dev/null; then
    wget -q --show-progress "$FFMPEG_URL" -O "ffmpeg-${FFMPEG_VERSION}.tar.xz"
elif command -v curl &> /dev/null; then
    curl -# -L "$FFMPEG_URL" -o "ffmpeg-${FFMPEG_VERSION}.tar.xz"
else
    echo "Error: Neither wget nor curl found. Please install one of them."
    exit 1
fi

# Extract tarball
echo "[2/4] Extracting tarball..."
tar -xf "ffmpeg-${FFMPEG_VERSION}.tar.xz"

# Extract only headers
echo "[3/4] Extracting headers only (.h files)..."
mkdir -p headers-only
cd "ffmpeg-${FFMPEG_VERSION}"

# Copy only .h files from lib* directories
for lib in libavcodec libavdevice libavfilter libavformat libavutil libswscale libswresample; do
    if [ -d "$lib" ]; then
        echo "  - Copying $lib headers..."
        find "$lib" -name "*.h" -exec cp --parents {} "../headers-only/" \;
    fi
done

# Move to output directory
echo "[4/4] Installing headers to $OUTPUT_DIR..."
rm -rf "$OUTPUT_DIR"
mkdir -p "$OUTPUT_DIR"
mv ../headers-only/* "$OUTPUT_DIR/" 2>/dev/null || true

# Generate avconfig.h (required for compilation, normally generated by ./configure)
# For x86/x64 Windows, little endian (AV_HAVE_BIGENDIAN=0)
echo "[5/5] Generating avconfig.h..."
cat > "$OUTPUT_DIR/libavutil/avconfig.h" <<'EOF'
#define AV_HAVE_BIGENDIAN 0
EOF
echo "  - Generated libavutil/avconfig.h (little endian for x86/x64)"

# Cleanup
cd "$PROJECT_ROOT"
rm -rf "$TEMP_DIR"

# Summary
HEADER_COUNT=$(find "$OUTPUT_DIR" -name "*.h" | wc -l)
SIZE=$(du -sh "$OUTPUT_DIR" | cut -f1)

echo
echo "=================================================="
echo "âœ“ Installation complete!"
echo "=================================================="
echo "Headers installed: $HEADER_COUNT files"
echo "Total size:        $SIZE"
echo "Location:          $OUTPUT_DIR"
echo
echo "You can now cross-compile for Windows without"
echo "installing FFmpeg development packages."
echo
echo "Next step:"
echo "  cmake -B build/windows -S . -DCMAKE_TOOLCHAIN_FILE=cmake/toolchain-mingw.cmake -DCMAKE_BUILD_TYPE=Release"
echo "  make -C build/windows -j\$(nproc)"
echo "=================================================="
