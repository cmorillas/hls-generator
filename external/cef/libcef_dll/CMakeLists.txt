# Copyright (c) 2014 The Chromium Embedded Framework Authors. All rights
# reserved. Use of this source code is governed by a BSD-style license that
# can be found in the LICENSE file.

# Simplified CEF wrapper for hls-generator project
# Based on official CEF libcef_dll/CMakeLists.txt

set(CEF_TARGET libcef_dll_wrapper)

# Core wrapper sources
# NOTE: libcef_dll.cc and libcef_dll2.cc are excluded - we implement
# cef_version_info, cef_api_hash, and test functions in src/cef_stubs.cpp instead
set(LIBCEF_SRCS
  shutdown_checker.cc
  shutdown_checker.h
  template_util.h
  transfer_util.cc
  transfer_util.h
  wrapper_types.h
  )

# Base utility sources
set(LIBCEF_BASE_SRCS
  base/cef_atomic_flag.cc
  base/cef_callback_helpers.cc
  base/cef_callback_internal.cc
  base/cef_lock.cc
  base/cef_lock_impl.cc
  base/cef_logging.cc
  base/cef_ref_counted.cc
  base/cef_thread_checker_impl.cc
  base/cef_weak_ptr.cc
  )

# C++ to C conversion wrappers (auto-generated by CEF build tools)
file(GLOB_RECURSE LIBCEF_CPPTOC_SRCS
  cpptoc/*.cc
  cpptoc/*.h
  )

# C to C++ conversion wrappers (auto-generated by CEF build tools)
file(GLOB_RECURSE LIBCEF_CTOCPP_SRCS
  ctocpp/*.cc
  ctocpp/*.h
  )

# Wrapper utility sources (exclude Mac-specific files)
file(GLOB LIBCEF_WRAPPER_SRCS
  wrapper/*.cc
  wrapper/*.h
  )
list(FILTER LIBCEF_WRAPPER_SRCS EXCLUDE REGEX ".*_mac\\.(cc|mm|h)$")
list(FILTER LIBCEF_WRAPPER_SRCS EXCLUDE REGEX ".*dylib\\.cc$")

# Create static library with all wrapper sources
add_library(${CEF_TARGET} STATIC
  ${LIBCEF_SRCS}
  ${LIBCEF_BASE_SRCS}
  ${LIBCEF_CPPTOC_SRCS}
  ${LIBCEF_CTOCPP_SRCS}
  ${LIBCEF_WRAPPER_SRCS}
  )

# Set include directories
target_include_directories(${CEF_TARGET} PUBLIC
  ${CMAKE_SOURCE_DIR}/external/cef/include
  ${CMAKE_SOURCE_DIR}/external/cef  # For libcef_dll/ includes
  )

# Creating the CEF wrapper library. Do not define this for dependent targets.
target_compile_definitions(${CEF_TARGET} PRIVATE
  -DWRAPPING_CEF_SHARED
  -DBUILDING_CEF_SHARED  # Required for CppToC wrappers
  )

# C++17 required for CEF wrapper
target_compile_features(${CEF_TARGET} PUBLIC cxx_std_17)

# CRITICAL: Force include redirects header to redirect all CEF C API calls to dynamic loader
# This is the magic that makes dynamic loading work with the CEF wrapper
# DISABLED: Using extern "C" wrappers in cef_function_wrappers.cpp instead
#target_compile_options(${CEF_TARGET} PRIVATE
#  -Wno-deprecated-declarations
#  -Wno-unused-parameter
#  -include ${CMAKE_SOURCE_DIR}/src/cef_function_redirects.h
#  )

# Platform-specific settings
if(UNIX AND NOT APPLE)
  # Linux - already set -fPIC above
endif()

# Remove the default "lib" prefix from the resulting library.
set_target_properties(${CEF_TARGET} PROPERTIES PREFIX "")
